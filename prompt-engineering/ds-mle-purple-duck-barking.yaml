timestamp: '2024-03-20T12:00:00'
name: ds-mle-purple-duck-barking
blacksmith_version: 1.0.0
prompt: |-
  ## Prompt

  ### Title: Predictive Analysis of Financial Instruments using Graph Convolutional Network (GCN) and Baseline Linear Regression

  As a Graph Data Scientist, your task is to develop a Jupyter notebook that performs predictive analysis on financial instruments using a Graph Convolutional Network (GCN) and compares it with a baseline linear regression model.

  #### Task Description
  1. Construct a graph where nodes represent financial instruments (symbols). The edges between these nodes should be created based on correlations above a given threshold. Use historical returns and volatility features of these symbols to create the graph.
  2. Train a Graph Convolutional Network (GCN) on this graph with the aim of predicting the next 15-minute return for a target symbol.
  3. Visualize the node embeddings in 2D space generated by GCN using t-SNE.
  4. Compare the predictions made by the GCN with a baseline linear regression model. The comparison should include both numerical and visual comparisons.

  #### Expected Outputs
  - A graph with symbol nodes and correlation-based edges.
  - 2D visualization of node embeddings using t-SNE.
  - Predicted vs actual returns comparison for the GCN model.
  - Comparison of GCN and linear regression model predictions.

  Ensure your notebook is well-commented, explaining your approach and observations at each step.
config:
  models: gpt-4o, mistral8x22b, llama3.3, claude3.5sonet
  temperature: 0.7
  max_tokens: 750
  top_p: 0.9
  frequency_penalty: 0.0
  presence_penalty: 0.0
embedding_model:
  name: projects/{project_number}/locations/{location}/endpoints/{endpoint_id}
  project_id: your-project-id
  location: us-central1
metadata:
  role: Graph data scientist
  scenario: Financial instruments GNN prediction
  inputs:
  - Graph with symbol nodes and correlation-based edges
  - Historical returns and volatility features
  - Graph Convolutional Network model
  outputs:
  - 2D node embeddings visualization (t-SNE)
  - Predicted vs actual returns comparison
  - GCN vs linear regression baseline comparison
